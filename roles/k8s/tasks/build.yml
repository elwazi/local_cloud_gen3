---
# tasks file for building docker image
- name: Initialise docker image
  become: yes
  tags: never, build
  block:
    - name: Upgrade all existing packages
      apt:
        upgrade: full
        update-cache: yes
      register: apt_res
      retries: 3
      delay: 15
      until: apt_res is success

    - name: Install required/commonly used packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - gnupg-agent
          - lsb-release
          - software-properties-common
        update-cache: yes

    - name: Add k8s signing key from https://packages.cloud.google.com/apt/doc/apt-key.gpg
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Get DEB architecture
      tags: build
      shell: dpkg --print-architecture
      register: deb_architecture

    - name: Get lsb release
      tags: build
      shell: lsb_release -cs
      register: lsb_release

# Note below: the rescue block is a workaround as focal doesn't have an apt repo yet
    - name: Add k8s repository
      block:
        - name: "Add k8s repository deb [arch={{ deb_architecture.stdout }}] https://apt.kubernetes.io/ kubernetes-{{ lsb_release.stdout }} main"
          apt_repository:
            repo: "deb [arch={{ deb_architecture.stdout }}] https://apt.kubernetes.io/ kubernetes-{{ lsb_release.stdout }} main"
            state: present
      rescue:
        - name: "{{ lsb_release.stdout }} failed. Adding k8s repository deb [arch={{ deb_architecture.stdout }}] https://apt.kubernetes.io/ kubernetes-xenial main"
          apt_repository:
            repo: "deb [arch={{ deb_architecture.stdout }}] https://apt.kubernetes.io/ kubernetes-xenial main"
            state: present

#   - name: Install k8s components
#      apt:
#        name:
#          - kubeadm=1.24.0-00
#          - kubelet=1.24.0-00
#          - kubectl=1.24.0-00
#          - kubernetes-cni
#        update-cache: yes

    - name: Hold k8s components
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      with_items:
        - kubeadm
        - kubelet
        - kubectl

#    - name: Add docker repo key
#      apt_key:
#        url: https://download.docker.com/linux/ubuntu/gpg
#        state: present
#
#    - name: Add docker repository
#      apt_repository:
#        repo: "deb [arch={{ deb_architecture.stdout }}] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"

    - name: Install containerd
      apt:
        name:
#          - docker-ce
#          - docker-ce-cli
          - containerd.io
#          - docker-compose-plugin
        update-cache: yes

    - name: Clean up packages
      apt:
        autoclean: yes
        autoremove: yes

    - name: Disable swap
      shell: swapoff -a

    - name: Disable swap in fstab
      lineinfile:
          path: /etc/fstab
          regexp: '^/swapfile'
          line: '#/swapfile'
          state: present

    - name: Ensure br_netfilter is loaded
      modprobe:
        name: br_netfilter
        state: present

    - name: Ensure br_netfilter is set to 1
      sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: 1
        sysctl_set: yes
        state: present
        reload: yes

#    - name: Ensure docker etc directory exists
#      file:
#        path: /etc/docker
#        state: directory
#
#    - name: Copy daemon.json file
#      copy:
#        src: etc/docker/daemon.json
#        dest: /etc/docker/daemon.json
#
#    - name: Ensure docker is enabled and started
#      service:
#        name: docker
#        enabled: yes
#        state: started
