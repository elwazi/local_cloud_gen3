---
# tasks file for configuring database host
- name: Configure Postgres database
  become: yes
  tags:
    - postgres
  block:
# todo: add postgres repo so that postgres 13 can be installed
    - name: Add postgres apt repository key
      apt_key:
        url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
        state: present

    - name: Add postgres repository
      apt_repository:
        repo: deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main
        state: present

    - name: Ensure acl, psycopg2 and libpq-dev are installed and are latest version
      tags:
        - psycopg2
      apt:
        name:
          - acl
          - default-jre
          - libpq-dev
          - postgresql-13
          - postgresql-client-13
          - postgresql-contrib-13
          - python3-psycopg2
        state: latest
        update-cache: yes

    - name: Get postgres version information
      become: yes
      become_user: postgres
      community.postgresql.postgresql_info:
        filter: version
      register: postgres_version

#    - name: Output postgres version
#      debug:
#        msg: "{{ postgres_version.version.major }}"

    - name: Configure postgres to listen to local network
      lineinfile:
        path: "/etc/postgresql/13/main/postgresql.conf"
        regex: "^listen_addresses.*"
        line: "listen_addresses = '{% for ip in ansible_all_ipv4_addresses %}{{ ip }}{% if not loop.last %}, {% endif %}{% endfor %}, localhost'"
      notify: Restart postgres

    - name: Configure postgres to allow connections on subnet
      lineinfile:
        path: "/etc/postgresql/13/main/pg_hba.conf"
        regex: "host *all *all *{{ gen3_subnet }} *md5"
        line: "host    all             all             {{ gen3_subnet }}         md5"
      notify: Restart postgres

    - name: Configure postgres superuser password
      become: yes
      become_user: postgres
      community.postgresql.postgresql_user:
        name: "{{ postgres.user }}"
        password: "{{ postgres.password }}"
        role_attr_flags: "SUPERUSER"
        encrypted: yes

#    - name: Create databases
#      become: yes
#      become_user: postgres
#      community.postgresql.postgresql_db:
#        name: "{{ item }}"
#      loop:
#        - metadata_db
#        - fence_db
#        - indexd_db
#
#    - name: Create users
#      become: yes
#      become_user: postgres
#      community.postgresql.postgresql_user:
#        name: "{{ item.user }}"
#        password: "{{ item.password }}"
#        role_attr_flags: "SUPERUSER"
#      loop:
#        - {
#            user: "{{ postgres_user }}",
#            password: "{{ postgres_password }}"
#          }
#        - {
#            user: "{{ postgres_fence_user }}",
#            password: "{{ postgres_fence_password }}"
#        }
#        - {
#            user: "{{ postgres_indexd_user }}",
#            password: "{{ postgres_indexd_password }}"
#        }
#        - {
#            user: "{{ postgres_peregrine_user }}",
#            password: "{{ postgres_peregrine_password }}"
#        }
#        - {
#            user: "{{ postgres_sheepdog_user }}",
#            password: "{{ postgres_sheepdog_password }}"
#
#        }
#        - {
#            user: "{{ postgres_arborist_user }}",
#            password: "{{ postgres_arborist_password }}"
#        }

- name: Update elasticsearch
  tags:
    - elasticsearch
  block:
    - name: Edit elasticsearch host key
      lineinfile:
        path: "/etc/elasticsearch/elasticsearch.yml"
        regex: "^network.host:.*"
        line: "network.host: {{ ansible_default_ipv4.address }}"
        insertafter: "^#network.host:.*"
      become: yes
      notify: Restart elasticsearch
